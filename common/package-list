$dokka.format:jekyll
$dokka.linkExtension:html
$dokka.location:org.mechdancer.common.collection.map2d$descartes(kotlin.collections.Iterable((org.mechdancer.common.collection.map2d.descartes.A)), kotlin.collections.Iterable((org.mechdancer.common.collection.map2d.descartes.B)))org.mechdancer.common.collection.map2d/kotlin.collections.-iterable/descartes.html
$dokka.location:org.mechdancer.common.collection.map2d$map2D(kotlin.collections.Iterable((org.mechdancer.common.collection.map2d.map2D.T)), kotlin.Function2((org.mechdancer.common.collection.map2d.map2D.T, , org.mechdancer.common.collection.map2d.map2D.V)))org.mechdancer.common.collection.map2d/kotlin.collections.-iterable/map2-d.html
$dokka.location:org.mechdancer.common.collection.map2d$stretch2D(kotlin.collections.Iterable((org.mechdancer.common.collection.map2d.stretch2D.T)), kotlin.Function2((org.mechdancer.common.collection.map2d.stretch2D.T, , org.mechdancer.common.collection.map2d.stretch2D.V)))org.mechdancer.common.collection.map2d/kotlin.collections.-iterable/stretch2-d.html
$dokka.location:org.mechdancer.common.concurrent$restartableTimer(kotlinx.coroutines.CoroutineScope, kotlin.Long, kotlin.coroutines.SuspendFunction0((kotlin.Unit)))org.mechdancer.common.concurrent/kotlinx.coroutines.-coroutine-scope/restartable-timer.html
$dokka.location:org.mechdancer.common.extension$adjust(kotlin.ranges.ClosedFloatingPointRange((kotlin.Double)), kotlin.Double)org.mechdancer.common.extension/kotlin.ranges.-closed-floating-point-range/adjust.html
$dokka.location:org.mechdancer.common.extension$cast(kotlin.Any)org.mechdancer.common.extension/kotlin.-any/cast.html
$dokka.location:org.mechdancer.common.extension$clamp(kotlin.ranges.ClosedRange((org.mechdancer.common.extension.clamp.T)), org.mechdancer.common.extension.clamp.T)org.mechdancer.common.extension/kotlin.ranges.-closed-range/clamp.html
$dokka.location:org.mechdancer.common.extension$div(kotlin.ranges.ClosedFloatingPointRange((kotlin.Double)), kotlin.Int)org.mechdancer.common.extension/kotlin.ranges.-closed-floating-point-range/div.html
$dokka.location:org.mechdancer.common.extension$extend(kotlin.Double, kotlin.Double)org.mechdancer.common.extension/kotlin.-double/extend.html
$dokka.location:org.mechdancer.common.extension$extend(kotlin.Int, kotlin.Int)org.mechdancer.common.extension/kotlin.-int/extend.html
$dokka.location:org.mechdancer.common.extension$extend(kotlin.Long, kotlin.Long)org.mechdancer.common.extension/kotlin.-long/extend.html
$dokka.location:org.mechdancer.common.extension$length#kotlin.ranges.ClosedFloatingPointRange((kotlin.Double))org.mechdancer.common.extension/kotlin.ranges.-closed-floating-point-range/length.html
$dokka.location:org.mechdancer.common.extension$length#kotlin.ranges.IntRangeorg.mechdancer.common.extension/kotlin.ranges.-int-range/length.html
$dokka.location:org.mechdancer.common.extension$length#kotlin.ranges.LongRangeorg.mechdancer.common.extension/kotlin.ranges.-long-range/length.html
$dokka.location:org.mechdancer.common.extension$otherwise(kotlin.Boolean, kotlin.Function0((kotlin.Unit)))org.mechdancer.common.extension/kotlin.-boolean/otherwise.html
$dokka.location:org.mechdancer.common.extension$plus(kotlin.ranges.ClosedFloatingPointRange((org.mechdancer.common.extension.plus.T)), kotlin.ranges.ClosedFloatingPointRange((org.mechdancer.common.extension.plus.T)))org.mechdancer.common.extension/kotlin.ranges.-closed-floating-point-range/plus.html
$dokka.location:org.mechdancer.common.extension$safeCast(kotlin.Any)org.mechdancer.common.extension/kotlin.-any/safe-cast.html
$dokka.location:org.mechdancer.common.extension$then(kotlin.Boolean, kotlin.Function0((kotlin.Unit)))org.mechdancer.common.extension/kotlin.-boolean/then.html
$dokka.location:org.mechdancer.common.extension$times(kotlin.ranges.ClosedFloatingPointRange((org.mechdancer.common.extension.times.T)), kotlin.ranges.ClosedFloatingPointRange((org.mechdancer.common.extension.times.T)))org.mechdancer.common.extension/kotlin.ranges.-closed-floating-point-range/times.html
$dokka.location:org.mechdancer.common.extension$toDouble(kotlin.ranges.IntRange)org.mechdancer.common.extension/kotlin.ranges.-int-range/to-double.html
$dokka.location:org.mechdancer.common.extension$toDouble(kotlin.ranges.LongRange)org.mechdancer.common.extension/kotlin.ranges.-long-range/to-double.html
org.mechdancer.common.collection.map2d
org.mechdancer.common.collection.trie
org.mechdancer.common.concurrent
org.mechdancer.common.extension
org.mechdancer.common.extension.log4j
